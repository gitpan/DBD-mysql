# -*- perl -*-

use strict;
require ExtUtils::MakeMaker;
require Config;
require DBI::DBD;
use lib "..";
require "Makefile.lib";

_MY::Config::Init(0);

sub config () {
    my $dbd_driver = "~DBD_DRIVER~";
    my $from_driver = "~DRIVER~";

    my $ref = &_MY::Config::Initialize~DRIVER~;

    my %hash = %$ref;
    $hash{'DEFINE'} .= " -DMyConnect=dbd_db_connect";
    $hash{'NAME'} = "DBD::" . $dbd_driver;
    $hash{'VERSION_FROM'} = "../lib/DBD/$dbd_driver.pm";
    $hash{'clean'} = { 'FILES' => '*.xsi' };
    \%hash;
}


my $pa = $_MY::Config::Postamble;
$_MY::Config::Postamble = \&Create~DBD_DRIVER~Postamble;
ExtUtils::MakeMaker::WriteMakefile(
	      OBJECT       => qq[\$(O_FILES)],
	      CONFIGURE    => \&config
	     );
$_MY::Config::Postamble = $pa;


sub Create~DBD_DRIVER~Postamble ($) {
    my $self = shift;

    my $pa = "\n";
    my $ref;
    foreach $ref
	(@_MY::Config::Files::~DBD_DRIVER~,
	 ["../dbd/dbd.xs.in", "~DBD_DRIVER~.xs"],
	 ["../dbd/dbdimp.c", "dbdimp.c"],
	 ["../dbd/myMsql.c", "myMsql.c"],
	 ["../tests/lib.pl", "t/lib.pl"],
	 ["../tests/00base.t", "t/00base.t"],
	 ["../tests/10dsnlist.t", "t/10dsnlist.t"],
	 ["../tests/20createdrop.t", "t/20createdrop.t"],
	 ["../tests/30insertfetch.t", "t/30insertfetch.t"],
	 ["../tests/40bindparam.t", "t/40bindparam.t"],
	 ["../tests/40listfields.t", "t/40listfields.t"],
	 ["../tests/40nulls.t", "t/40nulls.t"],
	 ["../tests/40numrows.t", "t/40numrows.t"],
	 ["../tests/50chopblanks.t", "t/50chopblanks.t"],
	 ["../tests/50commit.t", "t/50commit.t"],
	 ["../tests/ak-dbd.t", "t/ak-dbd.t"]) {
	$pa .= _MY::Config::XtractF($ref, "~DRIVER~", "~DBD_DRIVER~",
				    "../xtract");
    }
    $pa = $pa . "\ndbd.xs: ~DBD_DRIVER~.xsi\n\n";

    # we must be careful of quotes for Win32 here.
    my ($dir, $dbiDir);
    foreach $dir ($self->{INSTALLSITEARCH}, @INC) {
	if (-f "$dir/auto/DBI/Driver.xst") {
	    $dbiDir = $dir;
	    last;
	}
    }
    if (!$dbiDir) {
	die "Unable to detect location of 'Driver.xst'.\n";
    }

    $pa .= '
DBI_DRIVER_XST_DIR=' . $dbiDir . '/auto/DBI
DBI_DRIVER_XST=$(DBI_DRIVER_XST_DIR)/Driver.xst

$(BASEEXT).xs: $(BASEEXT).xsi

$(BASEEXT).c: $(BASEEXT).xsi

$(BASEEXT).xsi: $(DBI_DRIVER_XST)
	perl -p -e "s/\~DRIVER\~/$(BASEEXT)/g" < $(DBI_DRIVER_XST) > $(BASEEXT).xsi
';

    $pa;
}


package MY;

sub postamble {
    if ($_MY::Config::Postamble) {
	&$_MY::Config::Postamble(@_);
    } else {
	'';
    }
}
